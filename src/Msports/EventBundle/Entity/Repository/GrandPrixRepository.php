<?php

namespace Msports\EventBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Msports\EventBundle\Entity\Season;

/**
 * GrandPrixRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GrandPrixRepository extends EntityRepository
{
	public function findByName($slug)
    {
        
        $eventClass = $this->_entityName;
        $status = Season::STATUS_PRESENT;

        $query = "SELECT gp FROM $eventClass gp ";

        $query.=" INNER JOIN gp.parent champ";
        $query.=" INNER JOIN champ.parent s
                  WHERE gp.name = :slug
                  AND s.status=:status"
                  ;
    

        $results = $this->getEntityManager()
            ->createQuery($query)
            ->setParameter("slug", $slug)
            ->setParameter("status", $status);

        return $results->getOneOrNullResult();
    }

    public function findWeekEvents()
    {
        $eventClass = $this->_entityName;
        $date = date('Y-m-d'); // you can put any date you want
        $nbDay = date('N', strtotime($date));
        $monday = new \DateTime($date);
        $sunday = new \DateTime($date);
        $monday->modify('-'.($nbDay-1).' days');
        $sunday->modify('+'.(8-$nbDay).' days');
        $query = "SELECT a FROM $eventClass a
                  WHERE (a.startsAt >= :monday OR a.endsAt >= :monday)
                  AND a.startsAt <= :sunday
                  ";

        $query = $this->getEntityManager()
            ->createQuery($query)
            ->setParameter('monday', $monday)
            ->setParameter('sunday', $sunday);

        return $query->useQueryCache(true)->setQueryCacheLifetime(60)->getResult();
    }
}