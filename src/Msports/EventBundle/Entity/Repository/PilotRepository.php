<?php

namespace Msports\EventBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Msports\BlogBundle\Entity\Category;
/**
 * EventRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */

class PilotRepository extends EntityRepository
{
	public function findByTaxonomy($taxonomySlug, $type, $limit = null)
    {
    	$pilotClass = $this->_entityName;
        $query = "SELECT a FROM $pilotClass a";

        if ($type == Category::TYPE_TAG)
        {
            $query.=" INNER JOIN a.tags tr";
        }else
        {
            $query.=" INNER JOIN a.team tm";
            $query.=" INNER JOIN tm.categories tr";
        }

        $query.=" INNER JOIN tr.term t
                  WHERE tr.type=:type AND t.slug=:taxonomySlug
                  ORDER BY a.firstName DESC"
        ;

        $query = $this->getEntityManager()
            ->createQuery($query)
            ->setParameter("type",$type)
            ->setParameter('taxonomySlug',$taxonomySlug);

        if($limit)
        {
            $query->setMaxResults($limit);
        }

        $pilots = $query->useQueryCache(true)->setQueryCacheLifetime(60)->getResult();

        return $pilots;
    }

    public function findByName($firstName, $lastName)
    {
        $pilotClass = $this->_entityName;
        $query = "SELECT a FROM $pilotClass a";


        $query.=" WHERE a.lastName=:lastName AND a.firstName=:firstName
                  ORDER BY a.firstName DESC"
        ;

        $query = $this->getEntityManager()
            ->createQuery($query)
            ->setParameter("firstName",$firstName)
            ->setParameter('lastName',$lastName);

       
    
        

        $pilot = $query->useQueryCache(true)->setQueryCacheLifetime(60)->getResult();

        return $pilot;
    }
}