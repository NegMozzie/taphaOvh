imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@BlogBundle/Resources/config/services.xml" }
    - { resource: "@BlogBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

framework:
    translator:
        fallback: %locale%
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    form:
        resources:
            - 'SonataCoreBundle:Form:datepicker.html.twig'
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        default_connection: default
        connections:
            default:
                dbname:    "%database_name%"
                user:         "%database_user%"
                password:  "%database_password%"
                host:         "%database_host%"
                driver:       pdo_mysql
                server_version: 5.6 # your database server version here
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

services:
    fos_user.doctrine_registry:
        alias: doctrine
# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

sonata_media:
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                crop:  { width: 100 , quality: 80}
                small: { width: 15 , quality: 9}
                big:   { width: 500 , quality: 70}
                lib:   { width: 350 , height: 250 , quality: 70}
                excerpt:   { width: 780 , height: 500 , quality: 70}

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [BlogBundle]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~

knp_paginator:
    page_range: 5                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: KnpPaginatorBundle:Pagination:sliding.html.twig     # sliding pagination controls template
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig # sort link template

blog:
    entities:
        user_model_class: BlogBundle\Entity\User
        grandprix_model_class: BlogBundle\Entity\GrandPrix
        course_model_class: BlogBundle\Entity\Course
        championship_model_class: BlogBundle\Entity\Championship
        pilot_model_class: BlogBundle\Entity\Pilot
        team_model_class: BlogBundle\Entity\Team
        article_class: BlogBundle\Entity\Article
        article_meta_class: BlogBundle\Entity\ArticleMeta
        blog_term_class: BlogBundle\Entity\Term
        blog_taxonomy_class: BlogBundle\Entity\Taxonomy
        blog_taxonomy_relation_class: BlogBundle\Entity\TaxonomyRelation
        blog_comment_class: BlogBundle\Entity\Comment
        blog_settings_class: BlogBundle\Entity\BlogSettings

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class:     BlogBundle\Entity\User

#SonataAdmin
sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts: [admin]
        sonata.block.service.text:
        sonata.block.service.rss:

sonata_admin:
    title:      MecaSports
    title_logo: /bundles/sonataadmin/logo_title.png
    templates:
        # default global templates
        layout:  BlogBundle:Default:index.html.twig
        ajax:    SonataAdminBundle::ajax_layout.html.twig

        # default actions templates, should extend a global templates
        list:    SonataAdminBundle:CRUD:list.html.twig
        show:    SonataAdminBundle:CRUD:show.html.twig
        edit:    SonataAdminBundle:CRUD:edit.html.twig

    dashboard:
        blocks:
            # display a dashboard block
            - { position: left, type: sonata.admin.block.admin_list }
